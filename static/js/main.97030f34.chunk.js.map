{"version":3,"sources":["helpers/findIdHelper.ts","components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["findTabById","tabs","selectedTabId","find","id","Tabs","props","onTabSelected","selectedTab","className","map","tab","title","isSelected","cn","href","onClick","content","App","useState","setSelectedTabId","ReactDOM","render","document","getElementById"],"mappings":"2MAEO,SAASA,EAAYC,EAAaC,GACvC,OAAOD,EAAKE,MAAK,qBAAGC,KAAgBF,CAAnB,KAAqCD,EAAK,EAC5D,C,WCOYI,EAAkB,SAACC,GAC9B,IAAQL,EAAuCK,EAAvCL,KAAMC,EAAiCI,EAAjCJ,cAAeK,EAAkBD,EAAlBC,cACvBC,EAAcR,EAAYC,EAAMC,GAEtC,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKO,UAAU,gBAAf,SACE,6BACGR,EAAKS,KAAI,SAAAC,GACR,IAAQP,EAAcO,EAAdP,GAAIQ,EAAUD,EAAVC,MACNC,EAAaT,IAAOI,EAAYJ,GAEtC,OACE,oBAEEK,UAAWK,IAAG,CACZ,YAAaD,IAEf,UAAQ,MALV,SAOE,mBACEE,KAAI,WAAMX,GACV,UAAQ,UACRY,QAAS,WACFH,GACHN,EAAcI,EAEjB,EAPH,SASGC,KAfER,EAmBV,QAIL,qBAAKK,UAAU,QAAQ,UAAQ,aAA/B,SACGD,EAAYS,YAIpB,EC5CYhB,EAAc,CACzB,CAAEG,GAAI,QAASQ,MAAO,QAASK,QAAS,eACxC,CAAEb,GAAI,QAASQ,MAAO,QAASK,QAAS,eACxC,CAAEb,GAAI,QAASQ,MAAO,QAASK,QAAS,gBAG7BC,EAAgB,WAC3B,MAA0CC,mBAASlB,EAAK,GAAGG,IAA3D,mBAAOF,EAAP,KAAsBkB,EAAtB,KACMZ,EAAcR,EAAYC,EAAMC,GAMtC,OACE,sBAAKO,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,mCACsBD,EAAYI,SAGlC,cAAC,EAAD,CACEX,KAAMA,EACNC,cAAeA,EACfK,cAbc,SAACI,GACnBS,EAAiBT,EAAIP,GACtB,MAeF,ECjCDiB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,Q","file":"static/js/main.97030f34.chunk.js","sourcesContent":["import { Tab } from '../types/Tabs';\n\nexport function findTabById(tabs: Tab[], selectedTabId: string): Tab {\n  return tabs.find(({ id }) => id === selectedTabId) || tabs[0];\n}\n","import { FC } from 'react';\nimport cn from 'classnames';\nimport { Tab } from '../../types/Tabs';\nimport { findTabById } from '../../helpers/findIdHelper';\n\ntype Props = {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected: (tab: Tab) => void,\n};\n\nexport const Tabs: FC<Props> = (props) => {\n  const { tabs, selectedTabId, onTabSelected } = props;\n  const selectedTab = findTabById(tabs, selectedTabId);\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => {\n            const { id, title } = tab;\n            const isSelected = id === selectedTab.id;\n\n            return (\n              <li\n                key={id}\n                className={cn({\n                  'is-active': isSelected,\n                })}\n                data-cy=\"Tab\"\n              >\n                <a\n                  href={`#${id}`}\n                  data-cy=\"TabLink\"\n                  onClick={() => {\n                    if (!isSelected) {\n                      onTabSelected(tab);\n                    }\n                  }}\n                >\n                  {title}\n                </a>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab.content}\n      </div>\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nimport { Tab } from './types/Tabs';\nimport { Tabs } from './components/Tabs';\nimport { findTabById } from './helpers/findIdHelper';\n\nexport const tabs: Tab[] = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n  const selectedTab = findTabById(tabs, selectedTabId);\n\n  const handleClick = (tab: Tab) => {\n    setSelectedTabId(tab.id);\n  };\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTabId}\n        onTabSelected={handleClick}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}